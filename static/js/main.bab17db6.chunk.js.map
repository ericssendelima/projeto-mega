{"version":3,"sources":["components/NewLine.js","App.js","reportWebVitals.js","index.js"],"names":["NewLine","_useState","useState","_useState2","_slicedToArray","numbers","setNumbers","control","React","createElement","className","length","map","n","key","indexOf","onClick","teste","i","num","Math","floor","random","push","_toConsumableArray","filter","index","sort","a","b","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yNA4CeA,SAxCC,WAAM,IAAAC,EACQC,mBAAS,IAAGC,EAAAC,YAAAH,EAAA,GAAnCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAEpBI,EAAU,GAaZ,OACIC,IAAAC,cAAA,OAAKC,UAAU,aACfF,IAAAC,cAAA,OAAKC,UAAU,QACXF,IAAAC,cAAA,UACwB,IAAnBJ,EAAQM,OAERN,EAAQO,IAAI,SAAAC,GAAC,OAAIL,IAAAC,cAAA,MAAIK,IAAKT,EAAQU,QAAQF,IAAKA,KAE/CL,IAAAC,cAAA,QAAMC,UAAU,OACbF,IAAAC,cAAA,YAAM,yBACND,IAAAC,cAAA,YAAM,uBAQlBD,IAAAC,cAAA,UAAQO,QA7BK,WAEjB,IADA,IAAIC,EACIC,EAAI,EAAGA,EAAI,EAAGA,IAAI,CACtB,IAAIC,EAAMC,KAAKC,MAAuB,GAAjBD,KAAKE,SAAkB,GAC5Cf,EAAQgB,KAAKJ,GAEjBF,EAAQO,YAAIjB,EAAQkB,OAAO,SAAEN,EAAKO,GAAK,OAAMnB,EAAQQ,QAAQI,KAASO,KAAQC,KAAK,SAACC,EAAGC,GAAC,OAAKD,EAAIC,IAEjGvB,EAAWW,KAqBwB,YCpBxBa,SAVH,WAEV,OACEtB,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAACT,EAAO,SCDC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAAMD,EAANC,OAAQC,EAAMF,EAANE,OAAQC,EAAMH,EAANG,OAAQC,EAAMJ,EAANI,OAAQC,EAAOL,EAAPK,QAC3DJ,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxC,IAAAC,cAACD,IAAMyC,WAAU,KACfzC,IAAAC,cAACqB,EAAG,QAORC","file":"static/js/main.bab17db6.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './styles.css'\r\n\r\nconst NewLine = () => {\r\nconst [numbers, setNumbers] = useState([]);\r\n\r\nconst control = [];\r\n    \r\nconst handleRandom = () => {\r\n    let teste = [];\r\n    for(let i = 0; i < 6; i++){\r\n        let num = Math.floor(Math.random() * (60) + 1);\r\n        control.push(num);\r\n    };\r\n    teste = [...control.filter(( num, index ) => control.indexOf(num) === index)].sort((a, b) => a - b);\r\n\r\n    setNumbers(teste);\r\n};   \r\n\r\n    return (\r\n        <div className='container'>\r\n        <div className='list'>\r\n            <ul>\r\n                {numbers.length === 6 \r\n                 ?\r\n                 numbers.map(n =>(<li key={numbers.indexOf(n)}>{n}</li>)) \r\n                 : \r\n                 <span className='msg'>\r\n                    <span>Números repetidos.</span>\r\n                    <span>Tente novamente!</span>\r\n                 </span>\r\n                 }\r\n            </ul>\r\n            \r\n            \r\n        </div>\r\n\r\n        <button onClick={handleRandom}>Jogar</button>\r\n        \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NewLine;\r\n","\nimport React from \"react\";\nimport NewLine from \"./components/NewLine\";\n\nimport \"./App.css\"\n\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <h1>Números da sorte</h1>\n      <NewLine />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}